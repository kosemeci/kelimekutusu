<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Quick Word Match</title>
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <h1>Quick Word Match Game</h1>

  <div class="game-container">
    <!-- Kelimeler Listesi -->
    <div class="words">
      <h2>Words</h2>
      <ul id="word-list">
        <% words.forEach(wordObj => { %>
          <li class="word" draggable="true" data-word="<%= wordObj.word %>">
            <%= wordObj.word %>
          </li>
        <% }) %>
      </ul>
    </div>

    <!-- Anlamlar Listesi -->
    <div class="definitions">
        <h2>Definitions</h2>
        <ul id="definition-list">
          <% words
            .sort(() => Math.random() - 0.5)  // Diziyi karışık hale getir
            .forEach(wordObj => { %>
              <li class="definition" data-word="<%= wordObj.word %>">
                <%= wordObj.definition %>
              </li>
          <% }) %>
        </ul>
      </div>
  </div>

  <script src="/js/app.js"></script>
</body>
</html>

<style>
    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(to right, #ff9966, #ff5e62);
      text-align: center;
      padding: 40px;
      color: #fff;
    }

    h1 {
      font-size: 3rem;
      margin-bottom: 30px;
      text-shadow: 2px 2px #333;
    }

    .game-container {
      display: flex;
      justify-content: space-around;
      align-items: flex-start;
      margin-top: 30px;
      padding: 20px;
      background: rgba(255, 255, 255, 0.1);
      border-radius: 15px;
      box-shadow: 0 10px 15px rgba(0, 0, 0, 0.2);
    }

    .words, .definitions {
      width: 45%;
    }

    h2 {
      font-size: 2rem;
      margin-bottom: 20px;
    }

    ul {
      list-style: none;
      padding: 0;
    }

    li {
      background: rgba(255, 255, 255, 0.2);
      margin: 15px;
      padding: 15px;
      border-radius: 10px;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      font-size: 1.2rem;
    }

    li:hover {
      transform: scale(1.05);
      box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2);
    }

    .word {
      border: 2px solid #4CAF50;
      color: #333;
    }

    .definition {
      border: 2px solid #2196F3;
      color: #333;
    }

    /* Başarıyla eşleştiğinde */
    .success {
      background-color: #4CAF50 !important;
      color: white;
    }

    /* Yanlış eşleştiğinde */
    .error {
      background-color: #f44336 !important;
      color: white;
    }

    /* Sürükleme animasyonu */
    .draggable {
      animation: shake 0.2s;
      animation-iteration-count: infinite;
    }

    @keyframes shake {
      0% { transform: translateX(0); }
      25% { transform: translateX(-5px); }
      50% { transform: translateX(5px); }
      75% { transform: translateX(-5px); }
      100% { transform: translateX(0); }
    }
</style>

<script>
    // Tüm kelimeleri ve anlamları seçiyoruz
const words = document.querySelectorAll('.word');
const definitions = document.querySelectorAll('.definition');

// Sürüklenebilir kelimeyi başlatmak için event
words.forEach(word => {
  word.addEventListener('dragstart', dragStart);
});

definitions.forEach(definition => {
  definition.addEventListener('dragover', dragOver);
  definition.addEventListener('drop', drop);
});

// Sürükleme başladığında
function dragStart(e) {
  e.dataTransfer.setData('text', e.target.dataset.word);
}

// Sürüklenen kelime üzerinde
function dragOver(e) {
  e.preventDefault(); // Default davranışı önle, sürüklemenin devam etmesini sağla
}

// Kelimeyi anlamla eşleştirme
function drop(e) {
  e.preventDefault();
  const draggedWord = e.dataTransfer.getData('text');
  const definitionWord = e.target.dataset.word;

  if (draggedWord === definitionWord) {
    e.target.style.backgroundColor = '#4CAF50'; // Başarıyla eşleştiğinde yeşil
  } else {
    e.target.style.backgroundColor = '#f44336'; // Yanlış eşleştiğinde kırmızı
  }
}

</script>